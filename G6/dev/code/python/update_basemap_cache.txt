# ---------------------------------------------------------------------------
# update_basemap.py
# Created on: Tue Feb 02 2010 10:05:04 AM
#   (generated by ArcGIS/ModelBuilder)
# ---------------------------------------------------------------------------

# Import system modules
import sys, string, os, arcgisscripting, traceback, datetime, time
msgs = ""
try:
	# Create the Geoprocessor object
	gp = arcgisscripting.create()

	# Load required toolboxes...
	gp.AddToolbox("D:/Program Files/ArcGIS/ArcToolbox/Toolboxes/Server Tools.tbx")


	# Local variables...
	Output_Host = ""
	Output_Map_Server = ""
	#let's show some stats on how long it takes
	starttime = datetime.datetime.now()    
	print "Started ManageMapServerCacheTiles process at:", starttime
	# Process: Manage Map Server Cache Tiles...
	#basemap
	gp.ManageMapServerCacheTiles_server("localhost", "BASEMAP", "GeoStor", "Basemap", "2500000;1500000;1000000;500000;250000;100000;24000;10000;6000;2000;1000", "Recreate All Tiles", "327670.251390842 3641583.15224474 830379.590142853 4052349.59877763", "8", "None", "", "")
	print "Basemap Cache Updated!"
	#basemap_hybrid
	gp.ManageMapServerCacheTiles_server("localhost", "BASEMAP_HYBRID", "GeoStor", "Hybrid Basemap", "2500000;1500000;1000000;500000;250000;100000;24000;10000;6000;2000;1000", "Recreate All Tiles", "327670.251390842 3641583.15224474 830379.590142853 4052349.59877763", "8", "None", "", "")
	print "Hybrid Cache Updated!"
	endtime = datetime.datetime.now()
	elapsed = (endtime - starttime)
	print "Finished at:", endtime.strftime("%b %d %Y %H:%M:%S")
	print "Elapsed time:", elapsed
	os.system("..\send_email.vbs  \"Basemap Cache Update script ran successfully. Elapsed time: " + str(elapsed) + "\" \"Basemap Cache Update Script\"")
	#error reporting
except arcgisscripting.ExecuteError:
    # Get the geoprocessing error messages
    #
    msgs = gp.GetMessage(0)
    msgs += gp.GetMessages(2)

    # Return gp error messages for use with a script tool
    #
    gp.AddError(msgs)

    # Print gp error messages for use in Python/PythonWin
    #
    print msgs
    os.system("..\send_email.vbs  \"Basemap Cache Update script had an error: " + msgs.replace('\n',' ') + "\" \"Basemap Cache Update Script Error!\"")	
except:
    # Get the traceback object
    #
    tb = sys.exc_info()[2]
    tbinfo = traceback.format_tb(tb)[0]

    # Concatenate information together concerning the error into a 
    #   message string
    #
    pymsg = tbinfo + "\n" + str(sys.exc_type)+ ": " + str(sys.exc_value)

    # Return python error messages for use with a script tool
    #
    gp.AddError(pymsg)

    # Print Python error messages for use in Python/PythonWin
    #
    print msgs + pymsg
    os.system("..\send_email.vbs  \"Basemap Cache Update script had an error: " + msgs.replace('\n',' ') + pymsg.replace('\n',' ') + "\" \"Basemap Cache Update Script Error!\"")	
